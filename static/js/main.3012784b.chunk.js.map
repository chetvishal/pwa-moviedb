{"version":3,"sources":["service/index.js","components/home/Home.js","components/moviedetail/MovieDetail.js","components/history/history.js","components/Navbar/Navbar.js","components/search/searchResult.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["apiKey","url","nowPlayingUrl","topratedUrl","movieUrl","genreUrl","moviesUrl","personUrl","fetchMovies","a","axios","get","params","api_key","language","page","data","posterUrl","modifiedData","map","m","id","backPoster","popularity","title","poster","overview","rating","fetchGenre","g","name","fetchMovieByGenre","genre_id","with_genres","fetchPersons","p","profileImg","known","fetchTopratedMovie","fetchMovieDetail","fetchMovieVideos","results","fetchCasts","c","character","fetchSimilarMovie","Home","useState","nowPlaying","setNowPlaying","genres","setGenres","movieByGenre","setMovieByGenre","persons","setPersons","topRated","setTopRated","useEffect","fetchAPI","handleGenreClick","movies","slice","item","index","style","height","width","cursor","key","className","to","src","alt","textAlign","fontSize","genreList","type","onClick","movieList","fontWeight","count","size","color1","trendingPersons","color","topRatedList","marginTop","autoplay","pauseOnVisibility","slideshowSpeed","version","indicators","borderTop","href","MovieDetail","match","isOpen","setIsOpen","detail","setDetail","video","setVideo","casts","setCasts","similarMovie","setSimilarMovie","genresList","MoviePalyerModal","props","console","log","ckey","length","Modal","aria-labelledby","centered","Header","closeButton","Title","Body","backgroundColor","playing","i","castList","show","onHide","backdrop_path","vote_average","createBrowserHistory","Navbar","state","str","code","handleChange","e","setState","target","value","split","handleSubmit","len","ar","char","concat","preventDefault","trim","query","then","res","history","push","window","location","reload","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onSubmit","this","placeholder","onChange","Component","searchResult","result","getSecondPart","poster_path","App","path","component","exact","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.3012784b.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst apiKey = '4b87f1ea1a4141d7781efd43375e746f';\r\nconst url = 'https://api.themoviedb.org/3'; //'https://api.themoviedb.org/3'\r\nconst nowPlayingUrl = `${url}/movie/now_playing`;\r\nconst topratedUrl = `${url}/movie/top_rated`;\r\nconst movieUrl = `${url}/movie`;\r\nconst genreUrl = `${url}/genre/movie/list`;\r\nconst moviesUrl = `${url}/discover/movie`;\r\nconst personUrl = `${url}/trending/person/week`;\r\n\r\nexport const fetchMovies = async () => {\r\n    try {\r\n        const { data } = await axios.get(nowPlayingUrl, {\r\n            params: {\r\n                api_key: apiKey,\r\n                language: 'en_US',\r\n                page: 1\r\n            }\r\n        })\r\n\r\n        const posterUrl = 'https://image.tmdb.org/t/p/original/';\r\n        const modifiedData = data['results'].map((m) => ({\r\n            id: m['id'],\r\n            backPoster: posterUrl + m['backdrop_path'],\r\n            popularity: m['popularith'],\r\n            title: m['title'],\r\n            poster: posterUrl + m['poster_path'],\r\n            overview: m['overview'],\r\n            rating: m['vote_average'],\r\n        }))\r\n\r\n        return modifiedData;\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\n\r\nexport const fetchGenre = async () => {\r\n    try {\r\n        const { data } = await axios.get(genreUrl, {\r\n            params: {\r\n                api_key: apiKey,\r\n                language: 'en_US',\r\n                page: 1\r\n            }\r\n        })\r\n        const modifiedData = data['genres'].map((g) => ({\r\n            id: g['id'],\r\n            name: g['name']\r\n        }))\r\n        return modifiedData;\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\n\r\nexport const fetchMovieByGenre = async (genre_id) => {\r\n    try {\r\n        const { data } = await axios.get(moviesUrl, {\r\n            params: {\r\n                api_key: apiKey,\r\n                language: 'en_US',\r\n                page: 1,\r\n                with_genres: genre_id\r\n            }\r\n        })\r\n        const posterUrl = 'https://image.tmdb.org/t/p/original/';\r\n        const modifiedData = data['results'].map((m) => ({\r\n            id: m['id'],\r\n            backPoster: posterUrl + m['backdrop_path'],\r\n            popularity: m['popularith'],\r\n            title: m['title'],\r\n            poster: posterUrl + m['poster_path'],\r\n            overview: m['overview'],\r\n            rating: m['vote_average'],\r\n        }))\r\n\r\n        return modifiedData;\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\n\r\nexport const fetchPersons = async () => {\r\n    try {\r\n        const { data } = await axios.get(personUrl, {\r\n            params: {\r\n                api_key: apiKey\r\n            }\r\n        })\r\n        const modifiedData = data['results'].map((p) => ({\r\n            id: p['id'],\r\n            popularity: p['popularity'],\r\n            name: p['name'],\r\n            profileImg: 'https://image.tmdb.org/t/p/w200' + p['profile_path'],\r\n            known: p['known_for_department']\r\n        }))\r\n        return modifiedData;\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\n\r\nexport const fetchTopratedMovie = async () => {\r\n    try {\r\n        const { data } = await axios.get(topratedUrl, {\r\n            params: {\r\n                api_key: apiKey,\r\n                language: 'en_US',\r\n                page: 1\r\n            }\r\n        })\r\n\r\n        const posterUrl = 'https://image.tmdb.org/t/p/original/';\r\n        const modifiedData = data['results'].map((m) => ({\r\n            id: m['id'],\r\n            backPoster: posterUrl + m['backdrop_path'],\r\n            popularity: m['popularith'],\r\n            title: m['title'],\r\n            poster: posterUrl + m['poster_path'],\r\n            overview: m['overview'],\r\n            rating: m['vote_average'],\r\n        }))\r\n\r\n        return modifiedData;\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\n\r\nexport const fetchMovieDetail = async (id) => {\r\n    try {\r\n        const { data } = await axios.get(`${movieUrl}/${id}`, {\r\n            params: {\r\n                api_key: apiKey,\r\n                language: 'en_US'\r\n            }\r\n        });\r\n        return data;\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\n\r\nexport const fetchMovieVideos = async (id) => {\r\n    try{\r\n        const {data} = await axios.get(`${movieUrl}/${id}/videos`, {\r\n            params: {\r\n                api_key: apiKey\r\n            }\r\n        })\r\n        return data.results;\r\n    }\r\n    catch (error) {\r\n        // return data['results']\r\n    }\r\n}\r\n\r\nexport const fetchCasts = async (id) => {\r\n    try{\r\n        const {data} = await axios.get(`${movieUrl}/${id}/credits`, {\r\n            params: {\r\n                api_key: apiKey\r\n            }\r\n        });\r\n        const modifiedData = data['cast'].map((c) => ({\r\n            id: c['cast_id'],\r\n            character: c['character'],\r\n            name: c['name'],\r\n            id: 'https://image.tmdb.org/t/p/w200' + c['profile_path'],\r\n        }))\r\n        return modifiedData;\r\n    }\r\n    catch (error) {\r\n\r\n    }\r\n}\r\n\r\nexport const fetchSimilarMovie = async (id) => {\r\n    try{\r\n        const {data} = await axios.get(`${movieUrl}/${id}/recommendations`, {\r\n            params: {\r\n                api_key: apiKey,\r\n                language: 'en_US'\r\n            }\r\n        })\r\n        const posterUrl = 'https://image.tmdb.org/t/p/original/';\r\n        const modifiedData = data['results'].map((m) => ({\r\n            id: m['id'],\r\n            backPoster: posterUrl + m['backdrop_path'],\r\n            popularity: m['popularith'],\r\n            title: m['title'],\r\n            poster: posterUrl + m['poster_path'],\r\n            overview: m['overview'],\r\n            rating: m['vote_average'],\r\n        }))\r\n\r\n        return modifiedData;\r\n    }\r\n    catch (error) {\r\n\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { fetchMovies, fetchGenre, fetchMovieByGenre, fetchPersons, fetchTopratedMovie } from '../../service'\r\nimport RBCarousel from 'react-bootstrap-carousel'\r\nimport \"react-bootstrap-carousel/dist/react-bootstrap-carousel.css\";\r\nimport { Link } from 'react-router-dom';\r\nimport ReactStars from 'react-rating-stars-component';\r\n\r\nexport function Home() {\r\n\r\n  const [nowPlaying, setNowPlaying] = useState([]);\r\n  const [genres, setGenres] = useState([]);\r\n  const [movieByGenre, setMovieByGenre] = useState([]);\r\n  const [persons, setPersons] = useState([]);\r\n  const [topRated, setTopRated] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setNowPlaying(await fetchMovies());\r\n      setGenres(await fetchGenre());\r\n      setMovieByGenre(await fetchMovieByGenre());\r\n      setPersons(await fetchPersons());\r\n      setTopRated(await fetchTopratedMovie());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const handleGenreClick = async (genre_id) => {\r\n    setMovieByGenre(await fetchMovieByGenre(genre_id))\r\n  }\r\n\r\n  const movies = nowPlaying.slice(0, 5).map((item, index) => {\r\n    return (\r\n      <div style={{ height: 500, width: \"100%\", cursor: 'pointer' }} key={index}>\r\n        <div className=\"carousel-center\">\r\n        <Link to={`/movie/${item.id}`}>\r\n          <img style={{ height: 600 }} src={item.backPoster} alt={item.title} className=\"poster-carousel\" />\r\n          </Link>\r\n        </div>\r\n        {/* <div className=\"carousel-center\">\r\n          <i\r\n            className=\"far fa-play-circle\"\r\n            style={{ fontSize: 95, color: \"#f4c10f\" }}\r\n          ></i>\r\n        </div> */}\r\n        <div\r\n          className=\"carousel-caption\"\r\n          style={{ textAlign: \"center\", fontSize: 35 }}\r\n        >\r\n          {item.title}\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const genreList = genres.map((item, index) => {\r\n\r\n    return (\r\n      <li className=\"list-inline-item\" key={index}>\r\n        <button type=\"button\" className=\"btn btn-outline-info\" onClick={() => {\r\n          handleGenreClick(item.id)\r\n        }}>\r\n          {item.name}\r\n        </button>\r\n      </li>\r\n    )\r\n  })\r\n\r\n  const movieList = movieByGenre.slice(0, 4).map((item, index) => {\r\n    return (\r\n      <div className=\"col-md-3 col-sm-6\" key={index}>\r\n        <div className=\"card\">\r\n          <Link to={`/movie/${item.id}`}>\r\n            <img src={item.poster} alt={item.title} className=\"img-fluid\" />\r\n          </Link>\r\n        </div>\r\n        <div className=\"mt-3\">\r\n          <p style={{ fontWeight: 'bolder' }}>{item.title}</p>\r\n          <p>Rated: {item.rating}</p>\r\n          <ReactStars count={item.rating} size={20} color1={'#f4c10f'}></ReactStars>\r\n        </div>\r\n      </div>\r\n    )\r\n  })\r\n\r\n  const trendingPersons = persons.slice(0, 4).map((item, index) => {\r\n    return (\r\n      <div className=\"col-md-3 text-center\" key={index}>\r\n\r\n        <img src={item.profileImg} alt={item.name} className=\"img-fluid rounded-circle mx-auto d-block\" />\r\n\r\n        <p className=\"font-weight-bold text-center\">{item.name}</p>\r\n        <p className=\"font-weight-light text-center\" style={{ color: '#5a606b' }}>\r\n          Treding for {item.known}\r\n        </p>\r\n\r\n      </div>\r\n    );\r\n  })\r\n\r\n  const topRatedList = topRated.slice(0, 4).map((item, index) => {\r\n    return (\r\n      <div className=\"col-md-3\" key={index}>\r\n        <div className=\"card\">\r\n          <Link to={`/movie/${item.id}`}>\r\n            <img src={item.poster} alt={item.title} className=\"img-fluid\" />\r\n          </Link>\r\n        </div>\r\n        <div className=\"mt-3\">\r\n          <p style={{ fontWeight: 'bolder' }}>{item.title}</p>\r\n          <p>Rated: {item.rating}</p>\r\n          <ReactStars count={item.rating} size={20} color1={'#f4c10f'}></ReactStars>\r\n        </div>\r\n      </div>\r\n    )\r\n  })\r\n\r\n  // console.log(topRated)\r\n  return (\r\n    <div className=\"container\" style={{marginTop: 10}}>\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <RBCarousel\r\n            autoplay={true}\r\n            pauseOnVisibility={true}\r\n            slideshowSpeed={5000}\r\n            version={4}\r\n            indicators={false}\r\n          >\r\n            {movies}\r\n          </RBCarousel>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row mt-3\">\r\n        <div className=\"col\">\r\n          <ul className=\"list-inline\">\r\n            {genreList}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row mt-3\">\r\n        <div className=\"col\">\r\n          <p className=\"font-weight-bold\" style={{ color: \"#5a606b\" }}>\r\n            OUR RECOMENDATION\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row mt-3\">\r\n        {movieList}\r\n      </div>\r\n\r\n      <div className=\"row mt-3\">\r\n        <div className=\"col\">\r\n          <p className=\"font-weight-bold\" style={{ color: \"#5a606b\" }}>\r\n            TRENDING PERSONS ON THIS WEEK\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row mt-3\">\r\n        <div className=\"col\">\r\n          <div className=\"float-right\">\r\n            <i className=\"far fa-arrow-alt-circle-right\"></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row mt-3\">{trendingPersons}</div>\r\n\r\n      <div className=\"row mt-3\">\r\n        <div className=\"col\">\r\n          <p className=\"font-weight-bold\" style={{color: \"#5a606b\"}}>\r\n            TOP RATED MOVIES \r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row mt-3\">\r\n        {topRatedList}\r\n      </div>\r\n\r\n      <hr className=\"mt-5\" style={{borderTop: \"1pz solid #5a606b\"}}></hr>\r\n\r\n      <div className=\"row mt-3 mb-5\">\r\n        <div className=\"col-md-8 col-sm-6\" style={{color: \"#5a606b\"}}>\r\n          <h3>ABOUT ME</h3>\r\n          <p>\r\n            My name is Chet Vishal Tunju, I'm a BCA grad.\r\n          </p>\r\n          <p>\r\n            I love to build apps.\r\n          </p>\r\n          <ul className=\"list-inline\">\r\n            <li className=\"list-inline-item\">\r\n              <a href=\"https://www.instagram.com/chet_vishal/\" style={{color: \"#f4c10\"}}>\r\n                <i className=\"fab fa-instagram\"></i>\r\n              </a>\r\n            </li>\r\n            <li className=\"list-inline-item\">\r\n              <a href=\"https://github.com/chetvishal\" style={{color: \"#f4c10\"}}>\r\n                <i className=\"fab fa-github\"></i>\r\n              </a>\r\n            </li>\r\n            <li className=\"list-inline-item\">\r\n              <a href=\"https://www.linkedin.com/in/chet-vishal-1056b7123/\" style={{color: \"#f4c10\"}}>\r\n                <i className=\"fab fa-linkedin\"></i>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home;","import React, { useEffect, useState } from 'react';\r\nimport { fetchMovieDetail, fetchMovieVideos, fetchSimilarMovie, fetchCasts } from '../../service';\r\nimport \"react-bootstrap-carousel/dist/react-bootstrap-carousel.css\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport ReactPlayer from 'react-player';\r\nimport ReactStars from 'react-rating-stars-component';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nexport function MovieDetail({ match }) {\r\n    let params = match.params;\r\n    let genres = [];\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [detail, setDetail] = useState([]);\r\n    const [video, setVideo] = useState([]);\r\n    const [casts, setCasts] = useState([]);\r\n    const [similarMovie, setSimilarMovie] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDetail(await fetchMovieDetail(params.id));\r\n            setVideo(await fetchMovieVideos(params.id));\r\n            setCasts(await fetchCasts(params.id));\r\n            setSimilarMovie(await fetchSimilarMovie(params.id));\r\n        };\r\n        fetchAPI();\r\n    }, [params.id])\r\n\r\n    genres = detail.genres;\r\n\r\n    const MoviePalyerModal = (props) => {\r\n        const youtubeUrl = \"https://www.youtube.com/watch?v=\";\r\n        // const key = `${video.results != null ? video.key  : null }`;\r\n        console.log('movie deatial')\r\n        const ckey = video.length ? video[0].key : null\r\n        const key = ckey;\r\n        // console.log(ke)\r\n        return (\r\n            <Modal\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title\r\n                        id=\"contained-modal-title-vcenter\"\r\n                        style={{ color: \"#000000\", fontWeight: \"bolder\" }}\r\n                    >\r\n                        {ckey ? detail.title : 'Trailer not available'}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n\r\n\r\n\r\n                <Modal.Body style={{ backgroundColor: \"#000000\" }}>\r\n                    <ReactPlayer\r\n                        className=\"container-fluid\"\r\n                        url={youtubeUrl + key}\r\n                        alt=\"Video not available\"\r\n                        playing\r\n                        width=\"100%\"\r\n                    ></ReactPlayer>\r\n                </Modal.Body>\r\n\r\n            </Modal>\r\n        );\r\n    };\r\n\r\n    let genresList;\r\n    if (genres) {\r\n        genresList = genres.map((g, i) => {\r\n            return (\r\n                <li className=\"list-inline-item\" key={i}>\r\n                    <button type=\"button\" className=\"btn btn-outline-info\">\r\n                        {g.name}\r\n                    </button>\r\n                </li>\r\n            );\r\n        });\r\n    }\r\n\r\n    const castList = casts.slice(0, 4).map((c, i) => {\r\n        if (c.id) {\r\n            console.log(c.id)\r\n            return (\r\n                <div className=\"col-md-3 text-center\" key={i}>\r\n\r\n                    <img className=\"img-fluid rounded-circle mx-auto d-block\"\r\n                        src={c.id}\r\n                        alt={c.name} />\r\n\r\n                    <p className=\"font-weight-bold text-center\">{c.name}</p>\r\n                    <p className=\"font-weight-light text-center\" style={{ color: '#5a606b' }}>\r\n                        {c.character}\r\n                    </p>\r\n\r\n                </div>\r\n            )\r\n        }\r\n    })\r\n\r\n    const movieList =  similarMovie.length ? similarMovie.slice(0, 4).map((item, index) => {\r\n        return (\r\n            <div className=\"col-md-3 col-sm-6\" key={index}>\r\n                <div className=\"card\">\r\n                    <Link to={`/movie/${item.id}`}>\r\n                        <img src={item.poster} alt={item.title} className=\"img-fluid\" />\r\n                    </Link>\r\n                </div>\r\n                <div className=\"mt-3\">\r\n                    <p style={{ fontWeight: 'bolder' }}>{item.title}</p>\r\n                    <p>Rated: {item.rating}</p>\r\n                    <ReactStars count={item.rating} size={20} color1={'#f4c10f'}></ReactStars>\r\n                </div>\r\n            </div>\r\n        )\r\n    }) : <div> <p>No Movies to show : /</p></div>\r\n   \r\n\r\n    console.log(casts)\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row mt-2\">\r\n            \r\n                <MoviePalyerModal\r\n                    show={isOpen}\r\n                    onHide={() => {\r\n                        setIsOpen(false);\r\n                    }}\r\n                ></MoviePalyerModal>\r\n                \r\n                <div className=\"col text-center\" style={{ width: '100%' }}>\r\n                    <img src={`http://image.tmdb.org/t/p/original/${detail.backdrop_path}`} alt={detail.title} className=\"img-fluid\" />\r\n                    <div className=\"carousel-center\">\r\n                        <i className=\"far fa-play-circle\" style={{ fontSize: 95, color: '#f4c10f', cursor: 'pointer' }} onClick={() => setIsOpen(true)}></i>\r\n                    </div>\r\n                    <div className=\"carousel-caption\" style={{ textAlign: \"center\", fontSize: 35 }}>{detail.title}</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row mt-3\">\r\n                <div className=\"col\">\r\n                    <p style={{ textAlign: \"center\", fontWeight: \"bolder\" }}>GENRE</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"row mt-3\">\r\n                <div className=\"col\">\r\n                    <ul className=\"list-inline\">\r\n                        {genresList}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row mt-3\">\r\n                <div className=\"col\">\r\n                    <div className=\"text-center\">\r\n                        <ReactStars\r\n                            count={detail.vote_average}\r\n                            size={20}\r\n                            color={'#f4c10f'}\r\n                        >\r\n\r\n                        </ReactStars>\r\n                    </div>\r\n                    <div className=\"mt-3\">\r\n                        <p style={{ color: '#5a606b', fontWeight: 'bold' }}>OVERVIEW</p>\r\n                        {detail.overview}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row mt-3\">\r\n                <div className=\"col\">\r\n                    <p style={{ textAlign: \"center\", fontWeight: \"bolder\" }}>CAST</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row mt-3\">\r\n                {castList}\r\n            </div>\r\n\r\n            <div className=\"row mt-3\">\r\n                <div className=\"col\">\r\n                    <p style={{ textAlign: \"center\", fontWeight: \"bolder\" }}>SIMILAR MOVIES</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row mt-3\">\r\n                {movieList}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieDetail;","import {createBrowserHistory} from 'history'\r\n\r\nexport default createBrowserHistory();","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport { withRouter } from 'react-router';\r\nimport {Link} from 'react-router-dom';\r\nimport history from '../history/history';\r\n\r\nclass Navbar extends Component {\r\n\r\n\r\n    state = {\r\n        str: [],\r\n        url: '',\r\n        movies: [],\r\n        code: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            str: e.target.value.split(\" \")\r\n        })\r\n    }\r\n    handleSubmit =  (e) => {\r\n        const len = this.state.str.length\r\n        const ar = this.state.str\r\n        var char = ''\r\n        for (var i = 0; i < len - 1; i++){\r\n            char = char + ar[i].concat('+')\r\n        }\r\n        char = char.concat(ar[len-1])\r\n        e.preventDefault()\r\n        console.log(this.state.str.length)\r\n        console.log(char)\r\n        console.log(`https://api.themoviedb.org/3/search/movie?api_key=4b87f1ea1a4141d7781efd43375e746f&language=en-US&page=1&include_adult=false&query=${char}`)\r\n        this.setState({\r\n            url: `https://api.themoviedb.org/3/search/movie?api_key=4b87f1ea1a4141d7781efd43375e746f&language=en-US&page=1&include_adult=false&query=${char}`,\r\n            code: char.trim()\r\n        })\r\n        axios.get(`https://api.themoviedb.org/3/search/movie`, {\r\n            params: {\r\n                api_key: `4b87f1ea1a4141d7781efd43375e746f`,\r\n                language: 'en_US',\r\n                page: 1,\r\n                query: char\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(this.state.code)\r\n            history.push(`/search/${this.state.code}`)\r\n            window.location.reload(false);\r\n        })\r\n        // console.log(data)\r\n            \r\n    }\r\n    componentDidMount(){\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-icon-top navbar-expand-lg navbar-light \">\r\n                    <a className=\"navbar-brand\" href=\"/\" style={{color: 'white'}}>TimesMovies</a>\r\n                    <button className=\"navbar-toggler bg-warning\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon \"></span>\r\n                    </button>\r\n\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            {/* <li className=\"nav-item active\">\r\n                                <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n                            </li> */}\r\n                        </ul>\r\n                        <form className=\"form-inline my-2 my-lg-0\" onSubmit={this.handleSubmit}>\r\n                            <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" onChange={this.handleChange} />\r\n                            \r\n                            <button className=\"btn btn-warning  my-2 my-sm-0\" type=\"submit\" >Search</button>\r\n                            \r\n                        </form>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport RBCarousel from 'react-bootstrap-carousel'\r\nimport \"react-bootstrap-carousel/dist/react-bootstrap-carousel.css\";\r\n\r\nclass searchResult extends Component {\r\n\r\n    state = {\r\n        result: []\r\n    }\r\n\r\n    getSecondPart(str) {\r\n        return str.split('/search/')[1];\r\n    }\r\n\r\n    // retUrl () {\r\n    //     console.log(window.location.href)\r\n    // }\r\n\r\n    componentDidMount() {\r\n        axios.get(`https://api.themoviedb.org/3/search/movie?api_key=4b87f1ea1a4141d7781efd43375e746f&language=en-US&page=1&include_adult=false&query=${this.getSecondPart(window.location.href)}`)\r\n            .then(res => {\r\n                console.log(res.data.results)\r\n                this.setState({\r\n                    result: res.data.results\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        console.log(this.getSecondPart(window.location.href))\r\n        console.log(this.state.result)\r\n\r\n        return (\r\n            <div style={{ marginTop: 15 }} className=\"container\" >\r\n                <div className=\"row mt-3\">\r\n                    {\r\n                        this.state.result.length ?\r\n                            this.state.result && this.state.result.map(res => {\r\n                                if (res.poster_path) {\r\n                                    return (\r\n                                        <div className=\"col-md-3 col-sm-6\" key={res.id}>\r\n                                            <div className=\"card\">\r\n                                                <Link to={`/movie/${res.id}`}>\r\n                                                    <img src={`https://image.tmdb.org/t/p/original/${res.poster_path}`} alt={res.title} className=\"img-fluid\" />\r\n                                                </Link>\r\n                                            </div>\r\n                                            <div className=\"mt-3\">\r\n                                                <p style={{ fontWeight: 'bolder' }}>{res.title}</p>\r\n                                                <p>Rated: {res.vote_average}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n\r\n                            })\r\n                            :\r\n                            <div className=\"row mt-3\">\r\n                                <div className=\"col\">\r\n                                    <p className=\"font-weight-bold\" style={{ color: \"#5a606b\" }}>\r\n                                        NO RESULT\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default searchResult;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { Switch, Route, BrowserRouter } from 'react-router-dom'\r\nimport Home from './components/home//Home'\r\nimport MovieDetail from './components/moviedetail/MovieDetail'\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport searchResult from './components/search/searchResult';\r\n\r\nexport function App() {\r\n  return (\r\n    <main>\r\n      <BrowserRouter>\r\n        <Navbar />\r\n        <div>\r\n          <Switch>\r\n\r\n            <Route path='/' component={Home} exact />\r\n            <Route path='/movie/:id' component={MovieDetail} exact />\r\n            <Route path='/search/:id' component={searchResult} />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport history from './components/history/history';\r\nimport { Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router history={history}>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}